<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      PjotrAsync (diff) – Hackathon
    </title>
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="up" href="/wiki/PjotrAsync?action=history" title="Page history" />
        <link rel="next" href="/wiki/PjotrAsync?action=diff&amp;version=3" title="Version 3" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/diff.css" type="text/css" />
        <link rel="prev" href="/wiki/PjotrAsync?action=diff&amp;version=1" title="Version 1" />
        <link rel="shortcut icon" href="/chrome/common/trac.ico" type="image/x-icon" />
        <link rel="icon" href="/chrome/common/trac.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search Hackathon" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script><script type="text/javascript" src="/chrome/common/js/diff.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <link rel="stylesheet" type="text/css" href="/chrome/common/css/diff.css" /><meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://hackathon.dbcls.jp/"><img src="/chrome/site/BioHackathon.png" alt="" /></a>
      </div>
      <form id="search" action="/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/login">Login</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li><a href="/about">About Trac</a></li><li class="last"><a href="/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first active"><a href="/wiki">Wiki</a></li><li><a href="/timeline">Timeline</a></li><li><a href="/roadmap">Roadmap</a></li><li><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><span>&larr; <a class="prev" href="/wiki/PjotrAsync?action=diff&amp;version=1" title="Version 1">Previous Change</a></span></li><li><a href="/wiki/PjotrAsync?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/PjotrAsync?action=diff&amp;version=3" title="Version 3">Next Change</a> &rarr;</span></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>Changes
        between
          <a href="/wiki/PjotrAsync?version=1">Version 1</a> and
        <a href="/wiki/PjotrAsync?version=2">Version 2</a> of
        <a href="/wiki/PjotrAsync?version=2">PjotrAsync</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/PjotrAsync?version=2"><div><input type="hidden" name="__FORM_TOKEN" value="a95c9f905160fbf18dadd01b" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="2" />
          <input type="hidden" name="old_version" value="1" />
    <label for="style">View differences</label>
    <select id="style" name="style">
      <option selected="selected" value="inline">inline</option>
      <option value="sidebyside">side by side</option>
    </select>
    <div class="field">
      Show <input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
      <label for="contextlines">lines around each change</label>
    </div>
    <fieldset id="ignore">
      <legend>Ignore:</legend>
      <div class="field">
        <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
        <label for="ignoreblanklines">Blank lines</label>
      </div>
      <div class="field">
        <input type="checkbox" id="ignorecase" name="ignorecase" />
        <label for="ignorecase">Case changes</label>
      </div>
      <div class="field">
        <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
        <label for="ignorewhitespace">White space changes</label>
      </div>
    </fieldset>
    <div class="buttons">
      <input type="submit" name="update" value="Update" />
    </div>
        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
          2008/02/12 15:06:46 (<a class="timeline" href="/timeline?from=2008-02-12T15%3A06%3A46%2B0900&amp;precision=second" title="2008-02-12T15:06:46+0900 in Timeline">17 years</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          pjotr2007
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/PjotrAsync?version=2">PjotrAsync</a>
        </h2>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 1">
                    <a href="/wiki/PjotrAsync?version=1#L1">
                      v1</a>
                  </th>
                  <th title="Version 2">
                    <a href="/wiki/PjotrAsync?version=2#L1">
                      v2</a>
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="mod">
                      <tr class="first">
                        <th>1</th><th> </th><td class="l"><span>== Aynchronous Communications <del></del>==</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>1</th><td class="r"><span>== Aynchronous Communications <ins>(Pjotr) </ins>==</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2</th><th>2</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>3</th><th>3</th><td class="l"><span>AC has many possible implementations and the main danger is to overcomplicate a solution (trying to facilitate all wishes and real user requirements).</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/PjotrAsync?version=1#L15">…</a></th>
                  <th><a href="/wiki/PjotrAsync?version=2#L15">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>15</th><th>15</th><td class="l"><span>What it should do:</span> </td>
                  </tr><tr>
                          <th>16</th><th>16</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>17</th><th> </th><td class="l"><span><del></del>* Receive info from web-service (jobreceiver)</span> </td>
                      </tr><tr>
                        <th>18</th><th> </th><td class="l"><span><del></del>* Start remote job on cluster (jobmonitor)</span> </td>
                      </tr><tr>
                        <th>19</th><th> </th><td class="l"><span><del></del>* Pipe input data to job (jobmonitor)</span> </td>
                      </tr><tr>
                        <th>20</th><th> </th><td class="l"><span><del></del>* Monitor job status (on failure perhaps restart) </span> </td>
                      </tr><tr>
                        <th>21</th><th> </th><td class="l"><span><del></del>* Get output (jobmonitor)</span> </td>
                      </tr><tr>
                        <th>22</th><th> </th><td class="l"><span><del></del>* Push output to client (jobsender)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>17</th><td class="r"><span><ins>&nbsp; </ins>* Receive info from web-service (jobreceiver)</span> </td>
                      </tr><tr>
                        <th> </th><th>18</th><td class="r"><span><ins>&nbsp; </ins>* Start remote job on cluster (jobmonitor)</span> </td>
                      </tr><tr>
                        <th> </th><th>19</th><td class="r"><span><ins>&nbsp; </ins>* Pipe input data to job (jobmonitor)</span> </td>
                      </tr><tr>
                        <th> </th><th>20</th><td class="r"><span><ins>&nbsp; </ins>* Monitor job status (on failure perhaps restart) </span> </td>
                      </tr><tr>
                        <th> </th><th>21</th><td class="r"><span><ins>&nbsp; </ins>* Get output (jobmonitor)</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>22</th><td class="r"><span><ins>&nbsp; </ins>* Push output to client (jobsender)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>23</th><th>23</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>24</th><th>24</th><td class="l"><span>What it should *not* do:</span> </td>
                  </tr><tr>
                          <th>25</th><th>25</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>26</th><th> </th><td class="l"><span><del></del>* Authentication/authorisation (is responsibility of the webservice)</span> </td>
                      </tr><tr>
                        <th>27</th><th> </th><td class="l"><span><del></del>* Filtering of data (modifying the stream) is responsibility of webservice)</span> </td>
                      </tr><tr>
                        <th>28</th><th> </th><td class="l"><span><del></del>* Job control (handled by cluster tools)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>26</th><td class="r"><span><ins>&nbsp; </ins>* Authentication/authorisation (is responsibility of the webservice)</span> </td>
                      </tr><tr>
                        <th> </th><th>27</th><td class="r"><span><ins>&nbsp; </ins>* Filtering of data (modifying the stream) is responsibility of webservice)</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>28</th><td class="r"><span><ins>&nbsp; </ins>* Job control (handled by cluster tools)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>29</th><th>29</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>30</th><th> </th><td class="l"><span>In its minimalistic fashio<del></del> it does not even handle status reports (i.e. percentage of job executed).</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>30</th><td class="r"><span>In its minimalistic fashio<ins>n</ins> it does not even handle status reports (i.e. percentage of job executed).</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>31</th><th>31</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>32</th><th>32</th><td class="l"><span>=== API ===</span> </td>
                  </tr><tr>
                          <th>33</th><th>33</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>34</th><th> </th><td class="l"><span><del></del>* jobreceiver may be able to receive jobs through SOAP, a pipe, or mail</span> </td>
                      </tr><tr>
                        <th>35</th><th> </th><td class="l"><span><del></del>* jobmonitor may be able to give updates on percentage executed (SOAP, RPC)</span> </td>
                      </tr><tr>
                        <th>36</th><th> </th><td class="l"><span><del></del>* jobsender may be able to return results through SOAP, pipe or mail</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>34</th><td class="r"><span><ins>&nbsp; </ins>* jobreceiver may be able to receive jobs through SOAP, a pipe, or mail</span> </td>
                      </tr><tr>
                        <th> </th><th>35</th><td class="r"><span><ins>&nbsp; </ins>* jobmonitor may be able to give updates on percentage executed (SOAP, RPC)</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>36</th><td class="r"><span><ins>&nbsp; </ins>* jobsender may be able to return results through SOAP, pipe or mail</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>37</th><th>37</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>38</th><th>38</th><td class="l"><span>=== Notes ===</span> </td>
                  </tr><tr>
                          <th>39</th><th>39</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>40</th><th> </th><td class="l"><span>* The jobmonitor has to be stateful as the server or node running the job may go down</span> </td>
                      </tr><tr>
                        <th>41</th><th> </th><td class="l"><span>* Piping is an incredible useful mechanism. The complication with webservices is the asynchronous nature (while the web protocol tends to by synchronous) - inspiration could be modglue (a Plan9-inspired extension of the Unix pipe concept).</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>40</th><td class="r"><span>&nbsp; * The jobmonitor has to be stateful as the server or node running the job may go down</span> </td>
                      </tr><tr>
                        <th> </th><th>41</th><td class="r"><span>&nbsp; * Piping is an incredibly useful mechanism. The complication with webservices is the asynchronous nature (while the web protocol tends to by synchronous) - inspiration could be [http://www.aei.mpg.de/~peekas/modglue/ modglue] (a Plan9-inspired extension of the Unix pipe concept). What I would like to do is:</span> </td>
                      </tr><tr>
                        <th> </th><th>42</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>43</th><td class="r"><span>&nbsp; acjob -t pipe "dbfetch URI:gb -t fasta|clustalw"|phyloanalyse &gt; tree.ph</span> </td>
                      </tr><tr>
                        <th> </th><th>44</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>45</th><td class="r"><span>where dbfetch and clustalw run on the cluster and phyloanalyse locally - just as an example. Obviously with pipes you expect the client to keep running uninterrupted. The AC version could be (simplistically):</span> </td>
                      </tr><tr>
                        <th> </th><th>46</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>47</th><td class="r"><span>&nbsp; acjob -t email me@waste.com "dbfetch URI:gb -t fasta|clustalw"</span> </td>
                      </tr><tr>
                        <th> </th><th>48</th><td class="r"><span>&nbsp; cat email|phyloanalyse &gt; tree.ph</span> </td>
                      </tr><tr>
                        <th> </th><th>49</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>50</th><td class="r"><span>or:</span> </td>
                      </tr><tr>
                        <th> </th><th>51</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>52</th><td class="r"><span>&nbsp; acjob -t poll "dbfetch URI:gb -t fasta|clustalw"|acpoll -i 180|phyloanalyse &gt; tree.ph</span> </td>
                      </tr><tr>
                        <th> </th><th>53</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>54</th><td class="r"><span>where acpoll polls the jobmonitor every 3 minutes for results.</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>42</th><th>55</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>43</th><th>56</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>44</th><th>57</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>45</th><th>58</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>59</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>60</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>61</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>62</th><td class="r"><ins></ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>63</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/about"><strong>Trac 0.11.6</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
