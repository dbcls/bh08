<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      PhyloWS_workgroup – Hackathon
    </title>
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/wiki/PhyloWS_workgroup?version=46&amp;format=txt" type="text/x-trac-wiki" title="Plain Text" />
        <link rel="up" href="/wiki/PhyloWS_workgroup" title="View latest version" />
        <link rel="next" href="/wiki/PhyloWS_workgroup?version=47" title="Version 47" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/wiki.css" type="text/css" />
        <link rel="prev" href="/wiki/PhyloWS_workgroup?version=45" title="Version 45" />
        <link rel="shortcut icon" href="/chrome/common/trac.ico" type="image/x-icon" />
        <link rel="icon" href="/chrome/common/trac.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search Hackathon" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" /><script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#content").find("h1,h2,h3,h4,h5,h6").addAnchor("Link to this section");
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://hackathon.dbcls.jp/"><img src="/chrome/site/BioHackathon.png" alt="" /></a>
      </div>
      <form id="search" action="/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/login">Login</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li><a href="/about">About Trac</a></li><li class="last"><a href="/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first active"><a href="/wiki">Wiki</a></li><li><a href="/timeline">Timeline</a></li><li><a href="/roadmap">Roadmap</a></li><li><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><span>&larr; <a class="prev" href="/wiki/PhyloWS_workgroup?version=45" title="Version 45">Previous Version</a></span></li><li><a href="/wiki/PhyloWS_workgroup" title="View latest version">View Latest Version</a></li><li><span><a class="next" href="/wiki/PhyloWS_workgroup?version=47" title="Version 47">Next Version</a> &rarr;</span></li><li class="last"><a href="/wiki/PhyloWS_workgroup?action=diff&amp;version=46">Last Change</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
        <table id="info" summary="Revision info">
          <tbody>
            <tr><th scope="row">
                Version 46 (modified by rvos, <a class="timeline" href="/timeline?from=2008-02-15T15%3A52%3A10%2B0900&amp;precision=second" title="2008-02-15T15:52:10+0900 in Timeline">17 years</a> ago)
            </th></tr>
            <tr><td class="message">
              <p>
--
</p>

            </td></tr>
          </tbody>
        </table>
      <div class="wikipage searchable">
        
          <h2 id="PhyloWSBioHackathonReport">PhyloWS <a class="missing wiki">BioHackathon?</a> Report</h2>
<h3 id="BrainstormsessionsMonday">Brainstorm sessions (Monday)</h3>
<ul><li>What's our scope for now?
</li><li>Accumulate use cases
</li><li>Accumulate requirements
</li><li>Propose a simple API
</li><li>Start reference implementations
</li><li>Have another round of OTU discussions
</li></ul><h3 id="FormalizingscopeusecasesrequirementsTuesday">Formalizing scope, use cases, requirements (Tuesday)</h3>
<ul><li>Identify inputs and outputs (white board)
</li><li>For all I/O combinations, imagine a <a class="ext-link" href="https://www.nescent.org/wg/evoinfo/index.php?title=PhyloWS#Use_Cases"><span class="icon"> </span>use case</a>, move to NESCent wiki
</li><li>For each use case, classify <a class="ext-link" href="https://www.nescent.org/wg/evoinfo/index.php?title=PhyloWS#PhyloWS_Requirements"><span class="icon"> </span>scope</a> and requirements
</li></ul><h3 id="Scopes">Scopes</h3>
<ul><li><strong>Phylogenetic tree database</strong>, i.e. a persistence service based on BioSQL
</li><li><strong>Phylogenetic data conversion</strong>, i.e. make sure that inputs and outputs of data work syntactically
</li><li><strong>Phylogenetic data analysis</strong>, i.e. actual computations
</li></ul><h3 id="APIdesign">API design</h3>
<p>
<i>Assuming that syntax and semantics of the data can be solved, what would be the syntax and semantics of making the connections?</i>
</p>
<h3 id="APIdesignprinciples">API design principles</h3>
<blockquote>
<p>
# Stateless REST, no accumulate-and-fire
# Architecture modeled as resources on which CRUD operations are performed
# Use common HTTP methods (GET, PUT, POST, DELETE)
# Describe RESTful API in WSDL 2.0
# Reuse prior art
</p>
</blockquote>
<h3 id="URLAPI">URL API</h3>
<p>
We started to design a URL API (pathinfo + query strings) on the <a class="ext-link" href="https://www.nescent.org/wg_evoinfo/PhyloWS/REST"><span class="icon"> </span>NESCent Wiki</a>
</p>
<h3 id="Actualimplementation">Actual implementation</h3>
<p>
All displacement activities aside, we did some coding:
</p>
<ul><li>Started conversion and persistence services
</li><li>Improve plumbing (format support, database support)
</li></ul><h3 id="Movingforward">Moving forward</h3>
<ul><li>Expand/formalize API, following manifesto? Recommendations?
</li><li>Implement services.
</li></ul><hr />
<p>
At present there is no standard web-service API for phylogenetic data that would allow integration of phylogenetic data and service providers into the programmable web. Hence, current approaches to integrate data and services into workflows are highly specific to the integration platform (CIPRES, Bioperl, Bio::Phylo, Kepler), and nearly unusable in other environments. This work group is formed to remedy this (to the extent that that's possible in a week).
</p>
<p>
Here are several ideas for tasks we can work on at the hackathon:
</p>
<ul><li>Defining scope 
<ul><li>Issue of identifiers and OTUs
</li></ul></li><li>Accumulating <a class="ext-link" href="https://www.nescent.org/wg_evoinfo/PhyloWS#Use_Cases"><span class="icon"> </span>use-cases</a>
</li><li>Formulating a task-oriented API <a class="ext-link" href="https://www.nescent.org/wg_evoinfo/PhyloWS#PhyloWS_Requirements"><span class="icon"> </span>requirements</a> description
</li><li>Proposing a concrete REST<del> or SOAP-</del>based API
</li><li>Propose input/output formats (e.g. <a class="ext-link" href="http://$resource?view=$format"><span class="icon"> </span>http://$resource?view=$format</a> where $resource is an opaque url to some data resource (matrix, tree, etc) and $format something like nexus, phylip, nexml, phyloxml, json, etc.)
</li><li>Start a reference implementation, for example based on data in BioSQL
</li></ul><p>
Gathering of use-cases and task-oriented requirements has started at <a class="ext-link" href="http://evoinfo.nescent.org/PhyloWS"><span class="icon"> </span>http://evoinfo.nescent.org/PhyloWS</a>.
</p>
<p>
</p><div class="wiki-toc"><ol><li><ol><li><a href="#PhyloWSBioHackathonReport">PhyloWS BioHackathon? Report</a><ol><li><a href="#BrainstormsessionsMonday">Brainstorm sessions (Monday)</a></li><li>
<a href="#FormalizingscopeusecasesrequirementsTuesday">Formalizing scope, use cases, requirements (Tuesday)</a></li><li>
<a href="#Scopes">Scopes</a></li><li>
<a href="#APIdesign">API design</a></li><li>
<a href="#APIdesignprinciples">API design principles</a></li><li>
<a href="#URLAPI">URL API</a></li><li>
<a href="#Actualimplementation">Actual implementation</a></li><li>
<a href="#Movingforward">Moving forward</a></li></ol></li><li>
<a href="#OpenSpacediscussion">Open Space discussion</a></li><li>
<a href="#ServicesversustheirInputsandOutputs">Services versus their Inputs and Outputs</a><ol><li><a href="#Inputs">Inputs</a></li><li>
<a href="#Outputs">Outputs</a></li></ol></li><li>
<a href="#Nodemetadata">Node metadata</a></li><li>
<a href="#Web-servicesspecification">Web-services specification</a></li></ol></li></ol></div><p>
</p>
<h2 id="OpenSpacediscussion">Open Space discussion</h2>
<p>
The Open Space discussion centered on the following issues:
</p>
<ul><li>The OTU (Operational Taxonomic Unit) perspective is an important use-case. 
<ul><li>Species tree hypothesis testing: splitting a given set of trees into subsets of trees as a function of compatibility to a given (set of) species tree(s). Degree of compatibility can be expressed as minimal sum of duplications needed to reconcile the gene with a species tree. I.e. measurement of the percentage of gene trees supporting an ecdysozoan versus a coelomata hypothesis.
<ul><li>Problem: the query topology will be given with either gene name labels, or species name labels, but the labels of the trees will be OTUs.
</li><li>Hence, each OTU needs to be linked to the gene name(s) and taxon names, and it needs to be possible to specify that matching tree nodes use the linked taxon or gene names.
</li></ul></li><li>The analysis mentioned above could be extended by asking questions about the (majority of) functional categories supporting a given species tree. These examples require association of the following data with gene tree nodes: taxonomy identifier, sequence identifier (which then, ideally, allows to retrieve functional data, such as GO).
</li><li>Gene tree analysis: similar to the Zmasek et al (2007) paper, one may want to build alignments and phylogenetic trees for all members of each protein  (family) of a biological network (e.g. apoptsis). After loading the trees into a database, one could then query the database for those gene trees that exhibit a given pattern (e.g. lineage specific gene expansion or gene loss).
</li><li>In molecular and comparative genomics applications, one may want to find all trees that have been built for a certain sequence.
<ul><li>Problem: As above, querying by sequence will give the gene name or the sequence accession number to match by, but tree nodes will have OTUs as labels. 
</li></ul></li></ul></li><li>We discussed whether we need identifiers for OTUs.
<ul><li>Pros: Rather than many individual idiosyncratic schemes for encoding sequence ID and taxon (and possibly additional information) into an OTU label, a single identifier could be resolved to the metadata using a common mechanism (such as LSID). Alternatively, one could standardize on a common encoding mechanism, that could then be parsed by a common mechanism.
</li><li>Cons: If using an (presumably opaque) identifier for OTUs, one ought to be able to expect that the same combination of sequence ID, taxon name (where one often implies the other, unless sequence ID is really an ambiguous gene name), and additional metadata (such as allele, population sample, etc) results in the same identifier, in essence necessitating an OTU identifier registry, or a common algorithm for constructing the identifier (which would then no longer be opaque). A standardized encoding mechanism would need to be widely supported and adopted.
</li></ul></li></ul><ul><li>We also need to be able to ossociate (typed) data with tree branches
<ul><li>The obvious example are branch lengths
</li><li>But we usually also have (possibly multiple) support values associated with tree branches
</li></ul></li></ul><h2 id="ServicesversustheirInputsandOutputs">Services versus their Inputs and Outputs</h2>
<p>
In a <a href="http://hackathon.dbcls.jp/attachment/wiki/PhyloWS_workgroup/P1070128.JPG">white board</a> exercise, we identified plausible input and output data types for phyloinformatic webservices. Plausibility is defined by our being able to imagine <a class="ext-link" href="https://www.nescent.org/wg_evoinfo/PhyloWS#Use_Cases"><span class="icon"> </span>use cases</a> (no time line for implementation implied, the goal here is to come up with interfaces)
</p>
<h3 id="Inputs">Inputs</h3>
<p>
The input data types defined here do not imply pass-by-value, i.e. "One Tree" could be some kind of identifier. In addition, it looks like several services need multiple data types (e.g. a matrix + a tree, in order to return a tree score). Given that accumulate-and-fire (i.e. stateful operations, where you first post a matrix, then a tree) is a Bad Thing, and that tunneling multiple data types in a single attachment or body (e.g. a chunk of nexus/nexml) is also a Bad Thing, it seems that these combinations of data would be submitted as multiple post parameters.
</p>
<ul><li><strong>One Tree</strong> - exactly one tree, which might function as a query topology, as an input for topology metric calculations, or as something for which associated data (matrices) and metadata might be retrieved
</li><li><strong>Pair of Trees</strong> - exactly two trees, which function as inputs for tree reconciliation (e.g. duplication inference) or for tree-to-tree distance calculations
</li><li><strong>Set of Trees</strong> - input for consensus calculations, or as query topologies
</li><li><strong>One OTU</strong> - exactly one OTU for which associated data (trees or matrices that contain it) and metadata might be retrieved
</li><li><strong>Pair of OTUs</strong> - exactly two OTUs, as input for topological queries (MRCA) and calculations (patristic distance)
</li><li><strong>Set of OTUs</strong> - input for topological queries (MRCA) and for which data (trees or matrices that contain them) and metadata might be retrieved
</li><li><strong>One Node</strong> - input for tree traversal operations (parent, children) and for which metadata might be retrieved
</li><li><strong>Pair of Nodes</strong> - input for topological queries (MRCA) and calculations (patristic distance)
</li><li><strong>Set of Nodes</strong> - input for topological queries (MRCA)
</li><li><strong>One Character</strong> - exactly one character (matrix column) for which calculations are performed (variability) and metadata is retrieved
</li><li><strong>Set of Characters</strong> - input as filter predicate, to retrieve OTUs that contain recorded states for the characters
</li><li><strong>One Character State Sequence</strong> - for which metadata is retrieved
</li><li><strong>Pair of Character State Sequences</strong> - as input for pairwise alignments, as input to calculate pairwise divergence
</li><li><strong>Set of Character State Sequences</strong> - as input for multiple sequence alignment
</li><li><strong>Character State Matrix</strong> - as input for inference (of one tree or set of trees), as input for calculations (average sequence divergence) and for which metadata is retrieved
</li></ul><h3 id="Outputs">Outputs</h3>
<p>
In addition to the mirroring the inputs described above, some 'primitives' may be required:
</p>
<ul><li><strong>Int</strong> - an integer, for things such as topology metrics (node counts) tree-to-tree distances (in branch moves) node distances (in number of nodes in between), character state counts, sequence divergence (substitution counts, site counts)
</li><li><strong>Float</strong> - a floating point value, for topology metrics (balance, stemminess, resolution) tree-to-tree distances (symmetric difference), patristic distance, sequence divergence
</li><li><strong>String</strong> - for metadata, e.g. descriptions
</li><li><strong>Stringvector</strong> - for metadata, e.g. a set of tags
</li></ul><h2 id="Nodemetadata">Node metadata</h2>
<p>
There is an extensive number of metadata elements one might want to record for nodes in a tree. Beyond the basic gene name, sequence ID, and taxon, metadata range from biogeography (area, lat/long), to host species (for analyses of host/parasite co-evolution), to functional attributes (GO terms, expression, subcellular location). 
</p>
<p>
Some of these attributes may blur the line to actual character data for nodes (whether tips or internal). In fact, the notion of strictly distinguishing between node metadata and node character data may not be tenable or useful in reality; data may be metadata in one situation, and used as correlated character in another situation, and used for tree inference in a third situation.
</p>
<p>
There are essentially two ways to represent node metadata:
</p>
<ul><li>Using a metadata schema (for example, an XML Schema, or a XML document definition, similar to metadata schemas in use in the library sciences such as DC, MARC21, etc).
<ul><li>Pros: provides a clear expectation for clients as to what metadata to expect, and the meaning of those elements can be (hard-) coded into applications.
</li><li>Cons: limited to whatever the metadata schema allows for, and any new metadata elements deemed useful by emerging research cannot be readily expressed (and rectifying that requires a metadata schema update, which in turn affects client applications rather directly). In addition, the meaning of metadata elements cannot be dynamically inferred or stated; it is implicit from the XML DTD or Schema definition.
</li></ul></li><li>Using attribute/value pairs, where attribute names are drawn from a controlled vocabulary.
<ul><li>Pros: allows for an unlimited number of metadata elements, and easy representation of new elements as necessitated by new research approaches. The semantics of a metadata element can be as richly represented as desired, in a readily machine-readable form, by relating the attribute term to other ontology terms. The metadata representation is readily amenable to an OWL or RDF representation.
</li><li>Cons: a client cannot know in advance which metadata elements it may encounter (though it may limit itself to only interpret a pre-defined number of them), and the full semantics of a metadata element may change solely by the underlying ontology changing.
</li></ul></li></ul><p>
We feel that only using attribute/value pairs fits our and research requirements.
</p>
<h2 id="Web-servicesspecification">Web-services specification</h2>
<p>
A web-services specification is being developed, initially based on RESTful interfaces. We also intend to create a WSDL 2.0 compliant service description, which can have alternative service bindings to REST (HTTP binding) or SOAP (SOAP binding). If possible, we intend to make the query service <a class="ext-link" href="http://www.loc.gov/standards/sru/"><span class="icon"> </span>SRU v1.2</a> compliant.
</p>
<p>
See the PhyloWS/REST page on the <a class="ext-link" href="http://evoinfo.nescent.org"><span class="icon"> </span>EvoInfo WG wiki</a>: <a class="ext-link" href="http://evoinfo.nescent.org/PhyloWS/REST"><span class="icon"> </span>http://evoinfo.nescent.org/PhyloWS/REST</a>
</p>

        
        
      </div>
          <h3>Attachments</h3>
          <ul>
              <li>
      <a href="/attachment/wiki/PhyloWS_workgroup/P1070128.JPG" title="View attachment">P1070128.JPG</a>
      <a href="/raw-attachment/wiki/PhyloWS_workgroup/P1070128.JPG" title="Download" class="trac-rawlink"><img src="/chrome/common/download.png" alt="Download" /></a>
      (<span title="2318161 bytes">2.2 MB</span>) - added by <em>rvos</em>
      <a class="timeline" href="/timeline?from=2008-02-14T10%3A33%3A43%2B0900&amp;precision=second" title="2008-02-14T10:33:43+0900 in Timeline">17 years</a> ago.
              </li>
          </ul>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="/wiki/PhyloWS_workgroup?version=46&amp;format=txt">Plain Text</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/about"><strong>Trac 0.11.6</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>